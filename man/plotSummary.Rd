% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotSummary.R
\name{plotSummary}
\alias{plotSummary}
\title{Plot the PASS/WARN/FAIL information}
\usage{
plotSummary(x, subset, pwfCols, labels, usePlotly = FALSE, ...)
}
\arguments{
\item{x}{Can be a \code{FastqcFile}, \code{FastqcFileList}, \code{FastqcData},
\code{FastqcDataList} or path}

\item{subset}{\code{logical}. Return the values for a subset of files.
May be useful to only return totals from R1 files, or any other subset}

\item{pwfCols}{Object of class \code{\link{PwfCols}} containing the colours for PASS/WARN/FAIL}

\item{labels}{An optional named vector of labels for the file names.
All filenames must be present in the names.
File extensions are dropped by default.}

\item{usePlotly}{\code{logical}. Generate an interactive plot using plotly}

\item{...}{Used to pass various potting parameters to theme.
Can also be used to set size and colour for box outlines.}
}
\value{
A ggplot2 object (\code{usePlotly = FALSE})
or an interactive plotly object (\code{usePlotly = TRUE})
}
\description{
Extract the PASS/WARN/FAIL summaries and plot them
}
\details{
This uses the standard ggplot2 syntax to create a three colour plot.
The output of this function can be further modified using the standard ggplot2 methods.
}
\examples{

# Get the files included with the package
barcodes <- c("ATTG", "CCGC", "CCGT", "GACC", "TTAT", "TTGG")
suffix <- c("R1_fastqc.zip", "R2_fastqc.zip")
fileList <- paste(rep(barcodes, each = 2), rep(suffix, times = 5), sep = "_")
fileList <- system.file("extdata", fileList, package = "ngsReports")

# Load the FASTQC data as a FastqcDataList
fdl <- getFastqcData(fileList)

# Check the overall PASS/WARN/FAIL status
plotSummary(fdl)

# Change theme parameters using the ellipsis
library(ggplot2)
plotSummary(fdl, axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))

# Add a vector of alternative names
altNames <- structure(gsub(".fastq", "", fileName(fdl)), names = fileName(fdl))
plotSummary(fdl, labels = altNames)

# Interactive plot
plotSummary(fdl, usePlotly = TRUE)


}
