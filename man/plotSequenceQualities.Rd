% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotSequenceQualities.R
\name{plotSequenceQualities}
\alias{plotSequenceQualities}
\title{Plot the Per Sequence Quality Scores}
\usage{
plotSequenceQualities(x, usePlotly = FALSE, labels, counts = FALSE,
  warn = 30, fail = 20, pwfCols, ..., expand = c(0.02, 0), alpha = 0.2)
}
\arguments{
\item{x}{Can be a \code{FastqcFile}, \code{FastqcFileList}, \code{FastqcData},
\code{FastqcDataList} or path}

\item{usePlotly}{\code{logical} Default \code{FALSE} will render using ggplot.
If \code{TRUE} plot will be rendered with plotly}

\item{labels}{An optional named vector of labels for the file names.
All filenames must be present in the names.
File extensions are dropped by default.}

\item{counts}{\code{logical}. Plot the counts from each file if \code{counts = TRUE}.
If \code{counts = FALSE} the frequencies will be plotted}

\item{warn, fail}{The default values for WARN and FAIL in FASTQC}

\item{pwfCols}{Object of class \code{\link{PwfCols}} containing the colours for PASS/WARN/FAIL}

\item{...}{Used to pass additional attributes to theme()}

\item{expand}{the default expansion of the x-axis. Passed to scale_x_continuous()}

\item{alpha}{Passed to background colours}
}
\value{
A ggplot2 object or interactive plotly object
}
\description{
Plot the Per Sequence Quality Scores for a set of FASTQC reports
}
\details{
Plots the distribution of average sequence quality scores across the set of files.
Values can be plotted either as counts (\code{counts = TRUE}) or as frequencies (\code{counts = FALSE}).

Any faceting or scale adjustment can be performed after generation of the initial plot,
using the standard methods of ggplot2 as desired.
}
\examples{

# Get the files included with the package
barcodes <- c("ATTG", "CCGC", "CCGT", "GACC", "TTAT", "TTGG")
suffix <- c("R1_fastqc.zip", "R2_fastqc.zip")
fileList <- paste(rep(barcodes, each = 2), rep(suffix, times = 5), sep = "_")
fileList <- system.file("extdata", fileList, package = "ngsReports")

# Load the FASTQC data as a FastqcDataList
fdl <- getFastqcData(fileList)

# Draw the defualt plot
plotSequenceQualities(fdl)

# Customise using the R1 subset, plotting counts,
# and faceting after the initial function call
library(ggplot2)
plotSequenceQualities(fdl, counts = TRUE) +
  facet_wrap(~Filename, ncol = 2, scales = "free_y")

}
